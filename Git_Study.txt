提交修改和提交新文件是一样的两步	（工作区 > 缓存区 > 版本区）
	add 到暂存区（stage（或者叫index））
	commit 提交到当前分支
	需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改


1，安装 Git

2，设置用户
	打开 Git Bash，输入：
		git config --global user.name XiaoYu
		git config --global user.email 970683504@qq.com
	--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。

3，创建版本库
	创建一个 文件夹，在文件夹中打开 Git Bash，输入：
		git init

4，添加文件到仓库
		git add filename.txt

5，提交文件到仓库
		git commit -m "提交说明"
	-m后面输入的是本次提交的说明

6，查看仓库状态
		git status

7，查看文件变化
		git diff filename.txt

8，查看提交日志
		git log		（复杂展示）
		git log --pretty=oneline	（简洁展示）

9，回退到上一个版本
		git reset --hard HEAD^
	HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100

10，回退版本后回到回退之前的版本（只要上面的命令行窗口还没有被关掉）
		git reset --hard *******（commit id）

11，查看历史命令（可用来找回回退之前的文件）
		git reflog

12，查看文本文件内容
		cat filename.txt

13，撤销 工作区 的修改
		git checkout -- filename.txt
	让这个文件回到最近一次 git commit 或 git add 时的状态

14，把暂存区的修改撤销掉（unstage），重新放回工作区：
		git reset HEAD filename.txt		（git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区）
		git checkout -- filename.txt

15，删除文件
		git rm test.txt
		git commit -m "remove test.txt"

16，恢复文件
		git checkout -- test.txt
	git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”